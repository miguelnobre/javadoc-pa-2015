<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="pa.iscde.javadoc.annotations" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="pa.iscde.javadoc.annotations" id="javadocannotations" name="JavaDoc Annotations"/>
      </appinfo>
      <documentation>
         &lt;br&gt;
This extension allows you to creaate a new JavaDoc tags, so that they can be extracted and displayed.
&lt;br&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="unnamedTag" minOccurs="1" maxOccurs="unbounded"/>
            <element ref="namedTag" minOccurs="1" maxOccurs="unbounded"/>
            <element ref="customTag" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="namedTag">
      <complexType>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":pt.iscde.javadoc.annotations.mfane.JavaDocNamedAnnotationsExtension"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="unnamedTag">
      <complexType>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":pt.iscde.javadoc.annotations.mfane.JavaDocUnnamedAnnotationsExtension"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="customTag">
      <complexType>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":pt.iscde.javadoc.annotations.mfane.JavaDocCustomAnnotationExtension"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         Example of extension implementation:

public class FinalTag implements JavaDocCustomAnnotationExtension {

    @Override
    public JavaDocCustomTag getJavaDocCustomTag() {
    return new JavaDocCustomTag() {

        @Override
        public String getTagName() {
        return &quot;final&quot;;
        }

        @Override
        public String getHeaderName() {
        return &quot;Final&quot;;
        }

        @Override
        public int nColumns() {
        return 5;
        }

        @Override
        public String getColumnSeparator() {
        return &quot;,&quot;;
        }

        @Override
        public AnnotationStyleI[] getAnnotationStyle() {
        return new AnnotationStyleI[] {
            //Link formado pelo URL na coluna 0, o alias na coluna 4
            //O false, indica que não vai ser omitido o URL na geração do JavaDoc
            StyleToolBox.LinkStyle(0, 4, false),
            //Indica que na coluna 0, o conteudo vai estar a verde
            StyleToolBox.ColorGreenStyle(new int[] { 0 } ),
            //Indica que na coluna 1, o conteudo vai estar a Bold
            StyleToolBox.BoldStyle(new int[] { 1 } ),
            //Indica que na coluna 1, o conteudo vai estar a vermelho
            StyleToolBox.ColorRedStyle(new int[] { 1 } ),
            //Indica que na coluna 1, o conteudo vai estar a Italico
            StyleToolBox.ItalicStyle(new int[] { 1 } ),
            //Indica que na coluna 3, o conteudo vai estar a azul, italico e negrito
            StyleToolBox.BoldStyle(3),
            StyleToolBox.ItalicStyle(3),
            StyleToolBox.ColorStyle(Color.CYAN, 3)
        };
        }
    };
    }
}
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         &lt;br&gt;
public JavaDocNamedTagI getTag(): Implement this method to return the new tags with the structure: @tag name description
&lt;br&gt;
public JavaDocUnnamedTagI getTag(): Implement this method to return the new tags with the structure: @tag description
&lt;br&gt;
public JavaDocCustomTag getJavaDocCustomTag(): Implement this method to return the new custom tag.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
