preVisit_MethodDeclaration(MethodDeclaration, JavaDoc, MethodWrapper) ::= <<
\<hr>
	<if(MethodWrapper.isConstructor)>
		\<ul>\<b>Constructor Name:\</b>
	<else>
		\<ul>\<b>Method Name:\</b>
	<endif>
		
	\<ul>
		<MethodWrapper.modifier>
		
		<if(!MethodWrapper.constructor)>
		
			<if(MethodWrapper.returnMap.file)>
				\<b>\<a href="#<MethodWrapper.returnMap.file>"><MethodWrapper.returnMap.type>\</a>\</b>
			<else>
				<MethodWrapper.returnType>
			<endif>
			
		<endif>
		
		\<a href="#<MethodDeclaration.startPosition>-<MethodDeclaration.length>"><MethodWrapper.name>\</a>

		(
		<MethodWrapper.variableType:{var|
			<if(var.file)>
				\<b>\<a href="#<var.file>"><var.type>\</a>\</b>
			<else>
				<var.type>
			<endif>
			
			<var.name>
		}; separator=", ">
		)
		
		<if(MethodWrapper.throwsMap)>
			throws
			
			<MethodWrapper.throwsMap:{throw|
			
			<if(throw.file)>
				\<b>\<a href="#<throw.file>"><throw.type>\</a>\</b>
			<else>
				<throw.type>
			<endif>
			}; separator=", ">
			
		<endif>
	\</ul>
\</ul>	

<if(JavaDoc.description)>
	\<ul>
		\<b>Description\</b>
		\<ul><JavaDoc.description>\</ul>
	\</ul>	
<endif>

<JavaDoc.tags:{anotTag|
	\<ul>
		\<b><first(JavaDoc.annotationsMapWrapper.(anotTag)).tag.headerName>\</b>
			<JavaDoc.annotationsMapWrapper.(anotTag):{anot|
				\<ul>
					<anot.name> <if(anot.name && anot.description)>-<endif> <anot.description>
				\</ul>
			}; separator="\n">
	\</ul>
}; separator="\n">
>>

postVisit_MethodDeclaration(MethodDeclaration, JavaDoc, MethodWrapper) ::= <<
>>