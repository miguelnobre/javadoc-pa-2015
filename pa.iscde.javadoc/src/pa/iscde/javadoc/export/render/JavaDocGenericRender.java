package pa.iscde.javadoc.export.render;

import org.eclipse.jdt.core.dom.ASTNode;

/**
 * Interface that specified the interface class the must to be implemented while
 * implementing on of the JavaDoc Extensions Points. This extension point allows
 * to customize the output generated by the rendering process for any parser
 * node element.
 * 
 * Inspired in the aspect idiom, it allows to intercept the javadoc generation
 * process for any parse node found while parsing the source file, by plugin
 * configuration this interceptor can be configured to run before or after the
 * standard generation process (or before or after other interceptors).
 * 
 * The return value of the extension method is used to control is the rest of
 * the rendering chain ought to be executed (or the process should be stopped
 * for this element)

 *
 */
public interface JavaDocGenericRender {

    /**
     * Interface for the method that implements an interceptor the javadoc
     * rendering process any parser node. This method is triggered by the
     * parsing process and is invoked when the parser parses a node.
     * 
     * @param node
     *            {@link ASTNode} find by the parser.
     * @param sb
     *            {@link StringBuffer} used to write the output of the current
     *            interceptor.
     * @return true if the rendering process for this stage is completed, false
     *         if the rest of the interceptor chain (which ends with the
     *         standard render process) ought to be executed:
     */
    boolean render(ASTNode node, StringBuilder sb);

}
